{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf0 -- Description: validate/update adm2_names in ISO3_worktable\
\
-- Steps:\
-- 1) create the adm2_thesaurus if it does not exist\
-- 2) create the ISO3_adm2_worktable if it does not exist (a new one should be created each time)\
-- 3) perform a first pass one-one match of adm2_raw -> adm1_link names from the link_table_<year>\
-- 4) perform a second pass one-one match of adm2_raw -> adm1_link names from the adm2_thesaurus\
-- 5) insert adm2_names found in link table but not worktable\
-- 6) insert adm2_names found in worktable but not link table\
\
-- Notes:\
-- you must replace the previous ISO3 with the target ISO3 manually throughout this script (other than the variables)\
-- you must replace the previous <year> with the target <year> manually throughout this script (other than the variables)\
\
\
-- SCRIPT PARAMETERS ================================================================================\
DECLARE @iso3 VARCHAR(3)\
SET @iso3 = 'MWI'\
\
-- DO NOT ALTER BELOW THIS LINE ======================================================================\
DECLARE @link_table_name VARCHAR(19)\
SET @link_table_name = @iso3 + '_link_table'\
\
DECLARE @admin_thesaurus VARCHAR(MAX)\
SET @admin_thesaurus =  '[reference].dbo.adm2_thesaurus'\
\
DECLARE @admin_worktable_name VARCHAR(MAX)\
SET @admin_worktable_name = @iso3 + '_adm2_worktable'\
\
DECLARE @worktable_name VARCHAR(13)\
SET @worktable_name = @iso3 + '_worktable'\
\
\
-- CREATE ADMIN THESAURUS IF NOT EXISTS ================================================================================\
DECLARE @create_admin_thesaurus VARCHAR(MAX)\
SET @create_admin_thesaurus = \
'IF NOT EXISTS (SELECT 1 FROM [reference].sys.tables WHERE name = PARSENAME ('''+@admin_thesaurus+''',1)) \
CREATE TABLE ' + @admin_thesaurus + \
'(\
	adm0_raw VARCHAR(255),\
	adm1_raw VARCHAR(255),\
	adm2_raw VARCHAR(255),    \
	adm0_link VARCHAR(255),\
	adm1_link VARCHAR(255),\
	adm2_link VARCHAR(255),\
	fips0 VARCHAR(4),\
	fips1 VARCHAR(4),\
	fips2 VARCHAR(7)\
)'\
EXEC(@create_admin_thesaurus)\
\
\
-- CREATE ADMIN WORKTABLE IF NOT EXISTS ================================================================================\
DECLARE @admin_worktable VARCHAR(MAX)\
SET @admin_worktable = \
'IF NOT EXISTS (SELECT 1 FROM [reference].sys.tables WHERE name = PARSENAME ('''+@admin_worktable_name+''',1)) \
CREATE TABLE ' + @admin_worktable_name + \
'(\
	adm0_raw NVARCHAR(255),\
	adm1_raw NVARCHAR(255),\
	adm2_raw NVARCHAR(255),    \
	adm0_link NVARCHAR(255),\
	adm1_link NVARCHAR(255),\
	adm2_link NVARCHAR(255),\
	fips0 VARCHAR(4),\
	fips1 VARCHAR(4),\
	fips2 VARCHAR(7),\
	adm_comment VARCHAR(MAX),\
	update_table INT\
)'\
EXEC(@admin_worktable)\
\
\
-- UPDATE WORKTABLE ADMIN LINK NAMES FROM YEAR_LINK_TABLE ================================================================================\
DECLARE @update_from_admins_from_link VARCHAR(MAX)\
SET @update_from_admins_from_link = '\
UPDATE '+@worktable_name+' SET \
adm2_link = (\
	SELECT DISTINCT ADM2_NAME \
	FROM '+@link_table_name+' \
	WHERE \
		'+@link_table_name+'.ADM0_NAME = [dbo].'+@worktable_name+'.adm0_link\
	AND '+@link_table_name+'.ADM1_NAME = [dbo].'+@worktable_name+'.adm1_link\
	AND '+@link_table_name+'.ADM2_NAME = [dbo].'+@worktable_name+'.adm2_raw\
),\
fips2 = (\
	SELECT DISTINCT FIPS2 \
	FROM '+@link_table_name+' \
	WHERE \
		'+@link_table_name+'.ADM0_NAME = [dbo].'+@worktable_name+'.adm0_link\
	AND '+@link_table_name+'.ADM1_NAME = [dbo].'+@worktable_name+'.adm1_link\
	AND '+@link_table_name+'.ADM2_NAME = [dbo].'+@worktable_name+'.adm2_raw\
)\
WHERE adm2_raw = (\
	SELECT DISTINCT ADM2_NAME \
	FROM '+@link_table_name+' \
	WHERE \
		'+@link_table_name+'.ADM0_NAME = [dbo].'+@worktable_name+'.adm0_link\
	AND '+@link_table_name+'.ADM1_NAME = [dbo].'+@worktable_name+'.adm1_link\
	AND '+@link_table_name+'.ADM2_NAME = [dbo].'+@worktable_name+'.adm2_raw\
) \
AND adm2_link IS NULL'\
EXEC(@update_from_admins_from_link)\
\
-- UPDATE WORKTABLE ADMIN LINK NAMES FROM ADMIN THEASURUS ================================================================================\
DECLARE @update_from_admins_from_thesaurus VARCHAR(MAX)\
SET @update_from_admins_from_thesaurus = '\
UPDATE '+@worktable_name+' SET \
adm2_link = (\
	SELECT DISTINCT adm2_link \
	FROM '+@admin_thesaurus+' \
	WHERE \
		'+@admin_thesaurus+'.adm0_link = [dbo].'+@worktable_name+'.adm0_link \
	AND '+@admin_thesaurus+'.adm1_link = [dbo].'+@worktable_name+'.adm1_link \
	AND '+@admin_thesaurus+'.adm2_raw COLLATE SQL_Latin1_General_CP1_CI_AS = [dbo].'+@worktable_name+'.adm2_raw COLLATE SQL_Latin1_General_CP1_CI_AS\
),\
fips2 = (\
	SELECT DISTINCT fips2 \
	FROM '+@admin_thesaurus+' \
	WHERE \
		'+@admin_thesaurus+'.adm0_link = [dbo].'+@worktable_name+'.adm0_link \
	AND '+@admin_thesaurus+'.adm1_link = [dbo].'+@worktable_name+'.adm1_link \
	AND '+@admin_thesaurus+'.adm2_raw COLLATE SQL_Latin1_General_CP1_CI_AS = [dbo].'+@worktable_name+'.adm2_raw COLLATE SQL_Latin1_General_CP1_CI_AS\
)\
WHERE adm2_raw = (\
	SELECT DISTINCT adm2_raw \
	FROM '+@admin_thesaurus+' \
	WHERE \
		'+@admin_thesaurus+'.adm0_link = [dbo].'+@worktable_name+'.adm0_link \
	AND '+@admin_thesaurus+'.adm1_link = [dbo].'+@worktable_name+'.adm1_link \
	AND '+@admin_thesaurus+'.adm2_raw COLLATE SQL_Latin1_General_CP1_CI_AS = [dbo].'+@worktable_name+'.adm2_raw COLLATE SQL_Latin1_General_CP1_CI_AS\
) \
AND adm2_link IS NULL'\
EXEC(@update_from_admins_from_thesaurus)\
\
-- INSERT ADMIN NAMES FOUND IN WORKTABLE BUT NOT IN LINK TABLE ================================================================================\
DECLARE commands CURSOR FOR\
SELECT \
'INSERT INTO '+@admin_worktable_name+'(adm0_raw, adm1_raw, adm2_raw, adm0_link, adm1_link, adm2_link, fips0, fips1, fips2) \
 VALUES ('''+adm0_raw+''','''+adm1_raw+''','''+adm2_raw+''',NULL, NULL, NULL, NULL, NULL, NULL)'\
FROM (\
	SELECT DISTINCT adm2_raw, adm0_raw, adm1_raw\
	FROM MWI_worktable\
	WHERE adm2_link IS NULL\
) AS temp\
DECLARE @cmd VARCHAR(MAX)\
OPEN commands\
FETCH NEXT FROM commands INTO @cmd\
PRINT (@cmd)\
WHILE @@FETCH_STATUS=0\
BEGIN\
	EXEC(@cmd)\
	FETCH NEXT FROM commands INTO @cmd\
END\
CLOSE commands\
DEALLOCATE commands\
\
\
-- INSERT ADMIN NAMES INTO ADMIN WORKTABLE FOUND IN LINK TABLE BUT NOT IN ISO_WORKTABLE ================================================================================\
DECLARE commands1 CURSOR FOR\
SELECT \
'INSERT INTO '+@admin_worktable_name+'(adm0_raw, adm1_raw, adm2_raw, adm0_link, adm1_link, adm2_link, fips0, fips1, fips2) \
 VALUES (NULL,NULL,NULL,'''+ADM0_NAME+''','''+ADM1_NAME+''','''+ADM2_NAME+''', '''+FIPS0+''','''+FIPS1+''','''+FIPS2+''')'\
FROM (\
	SELECT DISTINCT ADM2_NAME, ADM0_NAME, ADM1_NAME, FIPS0, FIPS1, FIPS2\
	FROM MWI_link_table\
	WHERE ADM2_NAME NOT IN (SELECT DISTINCT(adm2_link) FROM MWI_worktable WHERE adm2_link IS NOT NULL)\
) AS temp\
DECLARE @cmd1 VARCHAR(MAX)\
OPEN commands1\
FETCH NEXT FROM commands1 INTO @cmd1\
WHILE @@FETCH_STATUS=0\
BEGIN\
	EXEC(@cmd1)\
	FETCH NEXT FROM commands1 INTO @cmd1\
END\
CLOSE commands1\
DEALLOCATE commands1\
\
\
-- CHECK THE RESULT OF THE ABOVE OPERATIONS ================================================================================\
EXEC('SELECT DISTINCT TOP 10 * FROM ' + @worktable_name + ' WHERE adm2_link IS NOT NULL')\
}